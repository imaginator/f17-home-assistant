- id: '1682522273340'
  alias: 'velux: restart controller'
  description: What a shitty controller!
  trigger:
  - platform: state
    entity_id:
    - cover.arbeit_inside
    to: unavailable
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: time
    at: 03:00:00
  condition: []
  action:
  - type: turn_off
    device_id: 6cdac090a18c759a208aeebf1e08e6c0
    entity_id: switch.powerplug
    domain: switch
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - type: turn_on
    device_id: 6cdac090a18c759a208aeebf1e08e6c0
    entity_id: switch.powerplug
    domain: switch
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
    alias: Give the device time to get back on the network
  - service: velux.reboot_gateway
    data: {}
  mode: single
- id: '1682952005836'
  alias: 'vacuum: vacuum when away'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.simon
    to: not_home
    from: home
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: and
    conditions:
    - condition: time
      after: 09:00:00
      before: '21:00:00'
    - condition: template
      value_template: '{{ now() - state_attr(''automation.vacuum_when_away'', ''last_triggered'')
        > timedelta(hours=24) }}'
    - condition: state
      entity_id: vacuum.rockrobo_vacuum_v1
      state: docked
  action:
  - service: notify.mobile_app_pixel_6_pro
    data:
      title: imagiSuck
      message: vacuuming since you are away
  - service: xiaomi_miio.vacuum_clean_zone
    target:
      entity_id: vacuum.rockrobo_vacuum_v1
    data:
      repeats: 1
      zone: '{{ expand(''group.vacuum_zones'') | map(attribute=''attributes.cleaning_zone'')
        | list }}

        '
  mode: single
- id: '1683110810042'
  alias: 'irrigation: daily watering'
  description: water the plants at sunset
  trigger:
  - platform: sun
    event: sunset
    offset: 0
  - platform: sun
    event: sunrise
    offset: 0
  condition: []
  action:
  - type: turn_on
    device_id: 75ec401978beef6c045ca7f90edf5401
    entity_id: switch.irrigation
    domain: switch
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - type: turn_off
    device_id: 75ec401978beef6c045ca7f90edf5401
    entity_id: switch.irrigation
    domain: switch
  mode: single
- id: '1683359690442'
  alias: KNX to Velux
  description: up/down and start/stop GAs ending in 1 are for up/down. GAs ending
    in 2 are for start/stop. Long press starts. Short press stops.
  trigger:
  - platform: event
    event_type: knx_event
    event_data:
      destination: 4//7/11
  - platform: event
    event_type: knx_event
    event_data:
      destination: 4//7/12
  - platform: event
    event_type: knx_event
    event_data:
      destination: 4/7/21
  - platform: event
    event_type: knx_event
    event_data:
      destination: 6/7/11
  - platform: event
    event_type: knx_event
    event_data:
      destination: 6/7/21
  - platform: event
    event_type: knx_event
    event_data:
      destination: 7/7/11
  - platform: event
    event_type: knx_event
    event_data:
      destination: 7/7/21
  - platform: event
    event_type: knx_event
    event_data:
      destination: 12/7/11
  - platform: event
    event_type: knx_event
    event_data:
      destination: 12/7/21
  - platform: event
    event_type: knx_event
    event_data:
      destination: 13/7/11
  - platform: event
    event_type: knx_event
    event_data:
      destination: 13/7/21
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.destination==''6/7/11'' and trigger.event.data.data
          == 0 }}'
      sequence:
      - service: cover.open_cover
        target:
          entity_id: cover.arbeit_inside
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.destination==''6/7/11'' and trigger.event.data.data
          == 1 }}'
      sequence:
      - service: cover.close_cover
        target:
          entity_id: cover.arbeit_inside
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.destination==''6/7/12'' and trigger.event.data.data
          == 0 }}'
      sequence:
      - service: cover.stop_cover
        target:
          entity_id: cover.arbeit_inside
    default: []
  mode: restart
- id: '1683477622969'
  alias: 'vacuum: cat toilet area'
  description: When motion is detected check if recently cleaned.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.cat_toilet
    from: 'on'
    to: 'off'
  - platform: time
    at: '21:30:00'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ now() - state_attr(''automation.clean_the_cat_toilet_after_use'',
        ''last_triggered'') > timedelta(minutes=240) }}

        '
    - condition: or
      conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: binary_sensor.workday_sensor
          state: 'on'
        - condition: time
          after: 08:00:00
          before: '22:00:00'
      - condition: and
        conditions:
        - condition: state
          entity_id: binary_sensor.workday_sensor
          state: 'off'
        - condition: time
          after: '10:00:00'
          before: '22:00:00'
  action:
  - service: vacuum.send_command
    data:
      command: app_segment_clean
      params:
      - '{{ state_attr(''input_boolean.vacuum_can_clean_catarea'', ''room_number'')
        }}'
    target:
      entity_id: vacuum.roborock_s7
  mode: single
- id: '1683485329027'
  alias: 'vacuum: midday bin empty'
  description: ''
  trigger:
  - platform: template
    value_template: '{{ is_state_attr(''sun.sun'',''rising'',False) }}'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: person.simon
      state: home
    - condition: template
      value_template: '{{ now() - state_attr(''automation.new_automation'', ''last_triggered'')
        | default(as_datetime(0), true)  > timedelta(hours=48) }}'
  action:
  - service: roborock.vacuum_goto
    data:
      x_coord: '1'
      y_coord: '2'
    target:
      entity_id: vacuum.roborock_s7
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: vacuum.return_to_base
    data: {}
    target:
      entity_id: vacuum.roborock_s7
- id: '1683523355949'
  alias: Wake-up clean cat toilet area
  description: When the blinds go up in the morning start cleaning the cat area.
  trigger:
  - platform: state
    entity_id:
    - cover.bedroom_1
    from: opening
    to: open
  condition:
  - condition: time
    after: 01:00:00
    before: '11:00:00'
  action:
  - service: vacuum.send_command
    data:
      command: app_segment_clean
      params:
      - '{{ state_attr(''input_boolean.vacuum_can_clean_catarea'', ''room_number'')
        }}'
    target:
      entity_id: vacuum.roborock_s7
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.tablet_bedroom1_screen
  mode: single
- id: '1683567854796'
  alias: KLF power toggle on shutdown
  description: restarts the KLF200 in order to avoid SSL Handshake issue
  trigger:
  - platform: homeassistant
    event: shutdown
  action:
  - type: turn_off
    device_id: 6cdac090a18c759a208aeebf1e08e6c0
    entity_id: switch.powerplug
    domain: switch
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - type: turn_on
    device_id: 6cdac090a18c759a208aeebf1e08e6c0
    entity_id: switch.powerplug
    domain: switch
- id: '1683636141578'
  alias: 'cover: bedroom1 close'
  description: When we start getting higher solar elevations (summer), it makes sense
    to close the blinds in the afternoon.
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: azimuth
    above: 217
  condition:
  - condition: and
    conditions:
    - condition: numeric_state
      entity_id: sensor.bedroom1_temperature
      above: 23
    - condition: state
      entity_id: binary_sensor.wind_alarm
      state: 'off'
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.bedroom_1
  mode: single
- id: '1683646429833'
  alias: 'cover: study blinds open'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: azimuth
    above: 210
  condition: []
  action:
  - service: cover.open_cover
    data: {}
    target:
      entity_id: cover.arbeit_inside
  mode: single
- id: '1684087154936'
  alias: 'lighting: WLEDs'
  description: Turn on at Sunset, off later in the evening.
  trigger:
  - platform: sun
    event: sunset
    offset: 0
  condition: []
  action:
  - type: turn_on
    device_id: ac68fe2d44befc497f0fb0f3b018bd66
    entity_id: light.wled_wedding
    domain: light
  - type: turn_on
    device_id: 52ce9a37e7df9c8ab6473d2975d99cbc
    entity_id: light.wled_soundreactive
    domain: light
  - wait_for_trigger:
    - platform: time
      at: '23:30:00'
  - type: turn_off
    device_id: ac68fe2d44befc497f0fb0f3b018bd66
    entity_id: light.wled_wedding
    domain: light
  - type: turn_off
    device_id: 52ce9a37e7df9c8ab6473d2975d99cbc
    entity_id: light.wled_soundreactive
    domain: light
  mode: single
- id: '1685089695000'
  alias: 'cover: study blinds close'
  description: When we start getting higher solar elevations (summer), it makes sense
    to close the blinds in the morning.
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: azimuth
    above: 106
  condition:
  - condition: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: 20
  action:
  - service: cover.set_cover_position
    data:
      position: 56
    target:
      entity_id: cover.arbeit_inside
  mode: single
- id: '1685170365728'
  alias: 'cover: hallway blinds close'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: 18
  condition: []
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id:
      - cover.hallway_large_window_north
      - cover.hallway_large_window_south
      - cover.main_bathroom_window_opener
      - cover.rooftop_window_opener
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: cover.close_cover
    data: {}
    target:
      entity_id:
      - cover.hallway_2
      - cover.hallway_3
      - cover.hallway_5
      - cover.hallway_6
      - cover.hallway_1
      - cover.hallway_4
  mode: single
- id: '1685452806557'
  alias: 'cover: kitchen blinds close'
  description: When we start getting higher solar elevations (summer), it makes sense
    to close the blinds in the afternoon.
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: azimuth
    above: 228
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.wind_alarm
      state: 'off'
    - condition: numeric_state
      entity_id: weather.home
      attribute: temperature
      above: 15
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id:
      - cover.kitchen_left_2
      - cover.kitchen_middle
  - delay:
      hours: 0
      minutes: 0
      seconds: 15
      milliseconds: 0
  - service: cover.set_cover_position
    data:
      position: 15
    target:
      entity_id: cover.kitchen_right
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.kitchen_right
  - service: cover.open_cover
    data: {}
    target:
      entity_id:
      - cover.lounge_left_inside
      - cover.lounge_middle_inside
      - cover.lounge_right_inside
  mode: single
- id: '1685457831023'
  alias: 'heating: evening switch to sleep mode'
  description: switch comfort to sleep in the evenings
  trigger:
  - platform: time
    at: '21:00:00'
  condition: []
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: sleep
    target:
      entity_id:
      - climage.kitchen
      - climate.bathroomguest
      - climate.bathroommain
      - climate.lounge
      - climate.study
  mode: single
- id: '1685457856166'
  alias: 'heating: morning switch to comfort mode'
  description: switch sleep to comfort
  trigger:
  - platform: time
    at: 07:00:00
  condition: []
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: comfort
    target:
      entity_id:
      - climage.kitchen
      - climate.bathroomguest
      - climate.bathroommain
      - climate.lounge
      - climate.study
  mode: single
- id: '1685458038374'
  alias: 'ventilation: switch vallox to home mode'
  description: based on away/home
  trigger:
  - platform: state
    entity_id:
    - input_boolean.away_mode
    to: 'on'
  condition: []
  action:
  - type: turn_on
    device_id: 876f56c448cd0842970e0f41e900af55
    entity_id: fan.vallox
    domain: fan
  mode: single
- id: '1685458052385'
  alias: 'ventilation: switch vallox to away mode'
  description: based on away/home
  trigger:
  - platform: state
    entity_id:
    - input_boolean.away_mode
    to: 'on'
  condition: []
  action:
  - type: turn_off
    device_id: 876f56c448cd0842970e0f41e900af55
    entity_id: fan.vallox
    domain: fan
  mode: single
- id: '1685458262882'
  alias: 'cover: hallway blinds open'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: 26
  condition: []
  action:
  - service: cover.set_cover_position
    data:
      position: 100
    target:
      entity_id:
      - cover.hallway_1
      - cover.hallway_2
      - cover.hallway_3
      - cover.hallway_4
      - cover.hallway_5
      - cover.hallway_6
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: cover.open_cover
    data: {}
    target:
      entity_id:
      - cover.hallway_large_window_north
      - cover.hallway_large_window_south
      - cover.main_bathroom_window_opener
      - cover.rooftop_window_opener
  mode: single
- id: '1685471129972'
  alias: 'cover: kitchen blinds open'
  description: 'Open the kitchen blinds when the sun drops below a certain elevation. '
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: 10
  condition: []
  action:
  - service: cover.set_cover_position
    data:
      position: 100
    target:
      entity_id:
      - cover.kitchen_right
      - cover.kitchen_left_2
      - cover.kitchen_middle
  mode: single
- id: '1685704336404'
  alias: 'audio: bathroom-guest playback'
  description: Play Apollo recordings when guests visit the porcelain throne
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bathroomguest
    to: 'on'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.bathroom_guest
      state: playing
  - condition: time
    after: 08:00:00
    before: '22:00:00'
  action:
  - service: media_player.volume_set
    data:
      volume_level: 0.2
    target:
      entity_id: media_player.bathroom_guest
  - service: media_player.volume_set
    data:
      volume_level: 0.05
    target:
      entity_id: media_player.bathroom_guest
  - service: media_player.play_media
    target:
      entity_id: media_player.bathroom_guest
    data:
      media_content_id: media-source://media_source/local/095-AAA.mp3
      media_content_type: audio/mpeg
    metadata:
      title: 095-AAA.mp3
      thumbnail:
      media_class: music
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: app
        media_content_id: media-source://media_source
  mode: single
- id: '1687457579075'
  alias: 'covers: lounge blinds open'
  description: Open the Lounge blinds later on in the day
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: azimuth
    above: 210
  condition: []
  action:
  - service: cover.set_cover_position
    data:
      position: 100
    target:
      entity_id:
      - cover.lounge_left_inside
      - cover.lounge_middle_inside
      - cover.lounge_right_inside
  - service: cover.set_cover_position
    data:
      position: 100
    target:
      entity_id:
      - cover.lounge_left_outside
      - cover.lounge_middle_outside
      - cover.lounge_left_inside
      - cover.lounge_middle_inside
      - cover.lounge_right_inside
  mode: single
- id: '1687457802972'
  alias: 'covers: close lounge blinds'
  description: When we start getting higher solar elevations (summer), it makes sense
    to close the blinds in the morning.
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: azimuth
    above: 90
  condition: []
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id:
      - cover.lounge_left_outside
      - cover.lounge_middle_outside
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: cover.close_cover
    data: {}
    target:
      entity_id:
      - cover.lounge_left_inside
      - cover.lounge_middle_inside
      - cover.lounge_right_inside
  mode: single
- id: '1688334888223'
  alias: turn off tablet screens
  description: ''
  trigger:
  - platform: time
    at: '22:00:00'
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id:
      - switch.tablet_bedroom1_screen
      - switch.tablet_bedroom3_screen
      - switch.tablet_bedroom2_screen
  mode: single
- id: '1688558564794'
  alias: Turn on Tablet Screens (fully-kiosk)
  description: turn on wallpanel screen when motion detected
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bathroomguest
    - binary_sensor.bathroommain
    - binary_sensor.bedroom1
    - binary_sensor.bedroom2
    - binary_sensor.bedroom3
    - binary_sensor.hallwaylarge
    - binary_sensor.hallwaysmall
    - binary_sensor.kitchen
    - binary_sensor.lounge
    - binary_sensor.study
    to:
    from:
  condition:
  - condition: time
    after: 06:00:00
    before: '22:00:00'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.tablet_{{ trigger.to_state.object_id }}_screen
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.tablet_{{ trigger.to_state.object_id }}_screen
  - delay:
      hours: 0
      minutes: 0
      seconds: 20
      milliseconds: 0
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.tablet_{{ trigger.to_state.object_id }}_screen
  mode: restart
- id: '1694165891588'
  alias: 'vacuum: vacuum when away'
  description: Wait until nobody is home to do a full vacuum
  trigger:
  - platform: state
    entity_id:
    - person.simon
    from: home
    to: not_home
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ now() - state_attr(''automation.vacuum_vacuum_when_away'',
        ''last_triggered'')  > timedelta(hours=42) }}'
    - condition: time
      after: 09:00:00
      before: '21:00:00'
  action:
  - service: vacuum.set_fan_speed
    data:
      fan_speed: quiet
    target:
      entity_id: vacuum.roborock_s7
  - service: vacuum.start
    data: {}
    target:
      entity_id: vacuum.roborock_s7
  mode: single
